/*
 * Order Service G09
 * API designed by team G09 for the HS24 SWDA course at HSLU
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ch.hslu.swda.common.entities;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

import java.util.Objects;
import java.util.UUID;

/**
 * InventoryItem
 */
@JsonPropertyOrder({
  InventoryItem.JSON_PROPERTY_PRODUCT,
  InventoryItem.JSON_PROPERTY_QUANTITY,
  InventoryItem.JSON_PROPERTY_REPLENISHMENT_THRESHOLD,
  InventoryItem.JSON_PROPERTY_REPLENISHMENT_TRACKING_ID
})
@JsonTypeName("InventoryItem")
@Introspected
public class InventoryItem {
    public final static int DEFAULT_REPLENISHMENT_THRESHOLD = 10;

    public static final String JSON_PROPERTY_PRODUCT = "product";
    private Product product;

    public static final String JSON_PROPERTY_QUANTITY = "quantity";
    private Integer quantity;

    public static final String JSON_PROPERTY_REPLENISHMENT_THRESHOLD = "replenishmentThreshold";
    private int replenishmentThreshold = DEFAULT_REPLENISHMENT_THRESHOLD;

    public static final String JSON_PROPERTY_REPLENISHMENT_TRACKING_ID = "replenishmentTrackingId";
    private UUID replenishmentTrackingId;

    public InventoryItem(Product product, int quantity, int replenishmentThreshold, UUID replenishmentTrackingId) {
        this.product = product;
        this.quantity = quantity;
        this.replenishmentThreshold = replenishmentThreshold;
        this.replenishmentTrackingId = replenishmentTrackingId;
    }

    public InventoryItem(Product product, int quantity) {
        this(product, quantity, DEFAULT_REPLENISHMENT_THRESHOLD, null);
    }

    public InventoryItem product(Product product) {
        this.product = product;
        return this;
    }

    /**
     * Get product
     * @return product
     */
    @Valid
    @NotNull
    @Schema(name = "product", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRODUCT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Product getProduct() {
        return product;
    }

    @JsonProperty(JSON_PROPERTY_PRODUCT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProduct(Product product) {
        this.product = product;
    }

    public InventoryItem quantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Get quantity
     * @return quantity
     */
    @NotNull
    @Schema(name = "quantity", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getQuantity() {
        return quantity;
    }

    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public InventoryItem replenishmentThreshold(int replenishmentThreshold) {
        this.replenishmentThreshold = replenishmentThreshold;
        return this;
    }

    /**
     * Get replenishmentThreshold
     * @return replenishmentThreshold
     */
    @Schema(name = "replenishmentThreshold", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)
    public int getReplenishmentThreshold() {
        return replenishmentThreshold;
    }

    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)
    public void setReplenishmentThreshold(int replenishmentThreshold) {
        this.replenishmentThreshold = replenishmentThreshold;
    }

    public InventoryItem replenishmentTrackingId(UUID replenishmentTrackingId) {
        this.replenishmentTrackingId = replenishmentTrackingId;
        return this;
    }

    /**
     * Get replenishmentTrackingId
     * @return replenishmentTrackingId
     */
    @Schema(name = "replenishmentTrackingId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_TRACKING_ID)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)
    public UUID getReplenishmentTrackingId() {
        return replenishmentTrackingId;
    }

    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_TRACKING_ID)
    public void setReplenishmentTrackingId(UUID replenishmentTrackingId) {
        this.replenishmentTrackingId = replenishmentTrackingId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof InventoryItem that)) return false;
        return replenishmentThreshold == that.replenishmentThreshold && Objects.equals(product, that.product) && Objects.equals(quantity, that.quantity) && Objects.equals(replenishmentTrackingId, that.replenishmentTrackingId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(product, quantity, replenishmentThreshold, replenishmentTrackingId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InventoryItem {\n");
        sb.append("    product: ").append(toIndentedString(product)).append("\n");
        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("    replenishmentThreshold: ").append(toIndentedString(replenishmentThreshold)).append("\n");
        sb.append("    replenishmentTrackingId: ").append(toIndentedString(replenishmentTrackingId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

