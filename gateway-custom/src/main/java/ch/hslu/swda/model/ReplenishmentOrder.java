/*
 * Order Service G09
 * API designed by team G09 for the HS24 SWDA course at HSLU
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ch.hslu.swda.model;

import java.time.LocalDate;
import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.*;

import jakarta.validation.constraints.*;
import io.micronaut.core.annotation.*;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ReplenishmentOrder
 */
@JsonPropertyOrder({
  ReplenishmentOrder.JSON_PROPERTY_TRACKING_ID,
  ReplenishmentOrder.JSON_PROPERTY_STATUS,
  ReplenishmentOrder.JSON_PROPERTY_PRODUCT,
  ReplenishmentOrder.JSON_PROPERTY_QUANTITY,
  ReplenishmentOrder.JSON_PROPERTY_DELIERY_DATE
})
@JsonTypeName("ReplenishmentOrder")
@Introspected
public class ReplenishmentOrder {
    public static final String JSON_PROPERTY_TRACKING_ID = "trackingId";
    private UUID trackingId;

    /**
     * Gets or Sets status
     */
    public enum StatusEnum {
        PENDING("PENDING"),
        CONFIRMED("CONFIRMED"),
        DONE("DONE");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_STATUS = "status";
    private StatusEnum status;

    public static final String JSON_PROPERTY_PRODUCT = "product";
    private Product product;

    public static final String JSON_PROPERTY_QUANTITY = "quantity";
    private int quantity;

    public static final String JSON_PROPERTY_DELIERY_DATE = "deliveryDate";
    private LocalDate deliveryDate;

    public ReplenishmentOrder(UUID trackingId, StatusEnum status, Product product, LocalDate deliveryDate) {
        this.trackingId = trackingId;
        this.status = status;
        this.product = product;
        this.deliveryDate = deliveryDate;
        this.quantity = quantity;
    }

    public ReplenishmentOrder() {}

    public ReplenishmentOrder trackingId(UUID trackingId) {
        this.trackingId = trackingId;
        return this;
    }

    /**
     * Get id
     * @return id
     */
    @NotNull
    @Schema(name = "trackingId", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_TRACKING_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getTrackingId() {
        return trackingId;
    }

    @JsonProperty(JSON_PROPERTY_TRACKING_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTrackingId(UUID trackingId) {
        this.trackingId = trackingId;
    }

    public ReplenishmentOrder status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @NotNull
    @Schema(name = "status", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public StatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public ReplenishmentOrder product(Product product) {
        this.product = product;
        return this;
    }

    /**
     * Get product
     * @return product
     */
    @NotNull
    @Schema(name = "product", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRODUCT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Product getProduct() {
        return product;
    }

    public ReplenishmentOrder quantity(int quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Get quantity
     * @return quantity
     */
    @NotNull
    @Schema(name = "quantity", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public int getQuantity() {
        return quantity;
    }

    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Schema(name = "deliveryDate", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DELIERY_DATE)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)
    public LocalDate getDeliveryDate() {
        return deliveryDate;
    }

    @JsonProperty(JSON_PROPERTY_DELIERY_DATE)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)
    public void setDeliveryDate(LocalDate deliveryDate) {
        this.deliveryDate = deliveryDate;
    }

    public ReplenishmentOrder deliveryDate(LocalDate deliveryDate) {
        this.deliveryDate = deliveryDate;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReplenishmentOrder replenishmentOrder = (ReplenishmentOrder) o;
        return Objects.equals(this.trackingId, replenishmentOrder.trackingId) &&
            Objects.equals(this.status, replenishmentOrder.status) &&
            Objects.equals(this.product, replenishmentOrder.product) &&
            Objects.equals(this.quantity, replenishmentOrder.quantity);
    }

    @Override
    public int hashCode() {
        return Objects.hash(trackingId, status, product, quantity);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReplenishmentOrder {\n");
        sb.append("    id: ").append(toIndentedString(trackingId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    orderItems: ").append(toIndentedString(product)).append("\n");
        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

