/*
 * Order Service G09
 * API designed by team G09 for the HS24 SWDA course at HSLU
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package ch.hslu.swda.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

import java.util.Objects;
import java.util.UUID;

/**
 * Replenishment
 */
@JsonPropertyOrder({
  Replenishment.JSON_PROPERTY_ID,
  Replenishment.JSON_PROPERTY_REPLENISHMENT_ORDER
})
@JsonTypeName("Replenishment")
@Introspected
public class Replenishment {
    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_REPLENISHMENT_ORDER = "replenishmentOrder";
    private ReplenishmentOrder replenishmentOrder;

    public Replenishment(UUID id, ReplenishmentOrder replenishmentOrder) {
        this.id = id;
        this.replenishmentOrder = replenishmentOrder;
    }

    public Replenishment id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * @return id
     */
    @NotNull
    @Schema(name = "id", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(UUID id) {
        this.id = id;
    }

    public Replenishment replenishmentOrder(ReplenishmentOrder replenishmentOrder) {
        this.replenishmentOrder = replenishmentOrder;
        return this;
    }

    /**
     * Get replenishmentOrder
     * @return replenishmentOrder
     */
    @Valid
    @NotNull
    @Schema(name = "replenishmentOrder", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_ORDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ReplenishmentOrder getReplenishmentOrder() {
        return replenishmentOrder;
    }

    @JsonProperty(JSON_PROPERTY_REPLENISHMENT_ORDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReplenishmentOrder(ReplenishmentOrder replenishmentOrder) {
        this.replenishmentOrder = replenishmentOrder;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Replenishment replenishment = (Replenishment) o;
        return Objects.equals(this.id, replenishment.id) &&
            Objects.equals(this.replenishmentOrder, replenishment.replenishmentOrder);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, replenishmentOrder);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Replenishment {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    replenishmentOrder: ").append(toIndentedString(replenishmentOrder)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

