classDiagram
    Employee "0..*" o-- "1" Role: has
    Item "1" o-- "1" Product: is of type
    Order "1" o-- "1..*" OrderItem: consists of
    OrderItem "1" o-- "1" Item: is
    Warehouse "1" o-- "1" WarehouseType: type
    Customer "1" --> "0..*" CustomerOrder: places
    OrderItem "1" o-- "1" Warehouse: is from
    Employee "1" --> "0..*" Customer: manages
    Invoice "1" *-- "1" CustomerOrder: generates
    Customer "1" --> "0..*" Invoice: receives
    Employee "1" --> "0..*" CustomerOrder: processes
    Employee "1" --> "0..*" ReplenishmentOrder: places
    Role "1" o-- "1" RoleName: is called
    Warehouse "1" *-- "0..*" Item: stores
    Customer "1" --> "0..*" Reminder: receives
    Reminder "0..*" *-- "1" Invoice: for
    ReplenishmentOrder "1" o-- "1" Warehouse: for
    Shipment "1" --> "1" Customer: notify
    CustomerOrder "1" --> "1" Shipment: initiates
    Order "0..*" o-- "1" OrderStatus: has

    Employee --|> Person: inherits
    Customer --|> Person: inherits

    ReplenishmentOrder --|> Order: inherits
    CustomerOrder --|> Order: inherits
    
    class WarehouseType{
        <<enumeration>>
        CENTRAL
        LOCAL
    }
    class OrderStatus{
        <<enumeration>>
        PENDING
        CONFIRMED
        AWAITING_PAYMENT
        DONE
    }
    class Shipment{
        -CustomerOrder order
    }
    class Reminder{
        -Invoice invoice
    }
    class Person{
        -UUID id
        -String firstName
        -String familyName
        +getFirstName() String
        +getFamilyName() String
    }
    class Product{
        -UUID id
        -String name
        -Number price
        +getId() UUID
        +getName() String
        +getPrice() Number
    }
    class Item{
        -UUID id
        -Product product
    }
    class Warehouse{
        +take(List~Item~ items)
        +allByProduct(Product product) List~Item~
    }
    class OrderItem {
        -Item item
        -Warehouse source
    }
    class Order{
        -timstamp: DateTime
        -items: List~OrderItem~
        -status: OrderStatus
        +getTimestamp() DateTime
        +getTotalPrice() Number
        +getItems() List~OrderItem~
        +getStatus() OrderStatus
    }
    class ReplenishmentOrder{
        -destination: Warehouse
        +getWarehouse() Warehouse
    }
    class CustomerOrder{
        -seller: Employee
        -customer: Customer
        +getSeller() Employee
    }
    class Role{
        -RoleName name
        getName() String
    }
    class Customer{
        -address: Address
        -contactInfo: ContactInfo
        +getCustomer() Customer
        +getAddress() Address
        +contact()
    }
    class Employee{
        -Role role
        +getRole() Role
    }
    class RoleName{
        <<enumeration>>
        SALES
        MANAGER
        DATA_TYPIST
        SYSTEM_ADMIN
    }
    class Invoice{
        -Order order
        -Date dueDate
        +getTotalPrice() Number
        +getDueDate() Date
    }